class Solution:
    def findKthPositive(self, arr: List[int], k: int):
        # missing number are before first ele in arr 
        starters = arr[0] - 1
        if starters >= k:
            return k
        k -= starters
        ans = 1
        for i in range(1, len(arr)):
            if arr[i] != arr[i-1] + 1:
                missing_cnt = arr[i] - arr[i-1] - 1
                if k <= missing_cnt:
                    return arr[i-1] + k
                k -= missing_cnt
        if k:
            return arr[-1] + k 

# BINARY SEARCH 
Initial array:     [2, 3, 4, 7, 11]
Indexes:            0  1  2  3   4
Expected values:    1  2  3  4   5
Missing numbers:    1        5,6,8,9,10


class Solution:
    def findKthPositive(self, arr: List[int], k: int):
        l, r = 0, len(arr)-1
        while l<=r:
            mid = (l+r)//2
            missing = arr[mid] - (mid+1)
            if missing < k:
                l = mid + 1
            else:
                r = mid - 1
        return l + k
            



