# """
# This is MountainArray's API interface.
# You should not implement it, or speculate about its implementation
# """
#class MountainArray:
#    def get(self, index: int) -> int:
#    def length(self) -> int:

class Solution:
    def findInMountainArray(self, target: int, mountainArr: 'MountainArray') -> int:
        peak = self.findPeak(mountainArr)
        if mountainArr.get(peak) == target:
            return peak
        left_of_peak = self.checkInMA(mountainArr, 0, peak-1, target, True)
        right_of_peak = self.checkInMA(mountainArr, peak+1, mountainArr.length()-1, target, False)
        
        if left_of_peak != -1:
            return left_of_peak
        if right_of_peak != -1:
            return right_of_peak
        else:
            return -1

    def findPeak(self, mountainArr: 'MountainArray'):
        l,r = 1, mountainArr.length()-2
        while l<=r:
            mid = (l+r)//2
            mid_val = mountainArr.get(mid)
            left_check = mountainArr.get(mid - 1) < mid_val
            right_check = mountainArr.get(mid + 1) < mid_val
            
            if left_check and right_check:
                return mid
            elif right_check:
                r = mid - 1
            else:
                l = mid + 1
    def checkInMA(self, mountainArr: 'MountainArray', l, r, target, ascending):
        
        while l<=r:
            mid = (l+r)//2
            mid_value = mountainArr.get(mid)
            if mid_value == target:
                return mid
            elif mid_value > target:
                if ascending:
                    r = mid - 1
                else:
                    l = mid + 1
            else:
                if ascending:
                    l = mid + 1
                else:
                    r = mid - 1 
        return -1 
        
        
