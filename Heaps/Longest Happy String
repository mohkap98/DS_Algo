class Solution:
    def longestDiverseString(self, a: int, b: int, c: int) -> str:
        max_heap = []
        res = []
        if a:
            heapq.heappush(max_heap, (-a, 'a'))
        if b:
            heapq.heappush(max_heap, (-b, 'b'))
        if c:
            heapq.heappush(max_heap, (-c, 'c'))

        while max_heap:
            cnt, value = heapq.heappop(max_heap)
            if len(res) > 1 and res[-1] == res[-2] == value:
                if not max_heap:
                    break
                cnt2, value2 = heapq.heappop(max_heap)
                res.append(value2)
                cnt2 += 1
                if cnt2:
                    heapq.heappush(max_heap, (cnt2, value2))
            else:
                res.append(value)
                cnt += 1
            if cnt:
                heapq.heappush(max_heap, (cnt, value))
        return "".join(res)
