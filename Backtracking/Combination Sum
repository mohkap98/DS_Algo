class Solution:
    def combinationSum(self, candidates: List[int], target: int) -> List[List[int]]:
        res = []

        def backtrack(st = 0, temp = [], curr_sum = 0):
            if curr_sum >= target:
                if curr_sum == target:
                    res.append(temp[:])
                return 
            
            for i in range(st, len(candidates)):
                temp.append(candidates[i])
                backtrack(i, temp, curr_sum + candidates[i])
                temp.pop()
        backtrack()
        return res

    
