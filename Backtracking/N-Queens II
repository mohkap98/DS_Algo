class Solution:
    def totalNQueens(self, n: int) -> int:
        chess_board = [['.' for _ in range(n)] for _ in range(n)]
        ways = [0]
        def checkSafety(chess_board, row, col):
            # vertical safety up
            for i in range(row-1, -1,-1):
                if chess_board[i][col] == 'Q':
                    return False
            
            # left_diagonal up
            for i,j in zip(range(row-1,-1,-1), range(col-1,-1,-1)):
                if chess_board[i][j] == 'Q':
                    return False
                    
            # right_diagonal up
            for i,j in zip(range(row-1,-1,-1), range(col+1,n)):
                if chess_board[i][j] == 'Q':
                    return False
        
            return True
    
        def alignQueens(chess_board, row):
            # base case 
            if row == n:
                ways[0]+=1
                return
        
            for j in range(n):
                if checkSafety(chess_board, row, j):
                    chess_board[row][j] = 'Q'
                    if alignQueens(chess_board, row+1):
                        return True
                    else:
                        chess_board[row][j] = '.'
            return False
        alignQueens(chess_board, 0)
        return ways[0]

        
        
