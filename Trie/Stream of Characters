class TrieNode:
    def __init__(self):
        self.children = {}
        self.EOW = False

class Trie:
    def __init__(self):
        self.root = TrieNode()
    
    def insertWord(self, word):
        cur = self.root
        for ch in word[::-1]:
            if ch not in cur.children:
                cur.children[ch] = TrieNode()
            cur = cur.children[ch]
        cur.EOW = True
    
    def searchWord(self, stream):
        cur = self.root
        for ch in stream[::-1]:
            if ch not in cur.children:
                return False
            cur = cur.children[ch]
            if cur.EOW:
                return True
        return False

class StreamChecker:
    def __init__(self, words: List[str]):
        self.trie = Trie()
        self.stream = []
        for word in words:
            self.trie.insertWord(word)

    def query(self, letter: str) -> bool:
        self.stream.append(letter)
        return self.trie.searchWord(self.stream)
        
