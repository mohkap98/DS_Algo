Bottom up - Tab

class Solution:
    def climbStairs(self, n: int) -> int:
        if n < 3:
            return n
        dp = [0] * (n+1)
        dp[1] = 1
        dp[2] = 2
        for i in range(3, n+1):
            dp[i] = dp[i-1] + dp[i-2]
        return dp[n]

TOP DOWN Memo

class Solution:
    def climbStairs(self, n: int) -> int:
        memo = [0] * n
        def climb(cur):
            if cur == n:
                return 1
            if cur > n:
                return 0
            if memo[cur]:
                return memo[cur]
            memo[cur] = climb(cur + 1) + climb(cur + 2)
            return memo[cur]
            
        return climb(0)
