class Solution:
    def maxSumAfterPartitioning(self, arr: List[int], k: int) -> int:
        cache = {}
        def DFS(l):
            if l >= len(arr):
                return 0
            if l in cache:
                return cache[l]

            max_sum = -inf
            for r in range(1, k+1):
                part = arr[l:l+r] 
                cur_sum = max(part) * len(part)
                max_sum = max(max_sum, cur_sum + DFS(l+r))
            
            cache[l] = max_sum
            return cache[l]
        
        return DFS(0)

        
