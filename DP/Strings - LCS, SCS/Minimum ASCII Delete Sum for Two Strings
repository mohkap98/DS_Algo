class Solution:
    def minimumDeleteSum(self, s1: str, s2: str) -> int:
        memo = {}
        def minDeleteSum(i,j):
            if i >= len(s1) and j >= len(s2):
                return 0
            
            if (i,j) in memo:
                return memo[(i,j)]

            if i >= len(s1):
                memo[(i,j)] = ord(s2[j]) + minDeleteSum(i,j+1)
                return memo[(i,j)]
            
            if j >= len(s2):
                memo[(i,j)] = ord(s1[i]) + minDeleteSum(i+1,j)
                return memo[(i,j)]
            
            if s1[i] == s2[j]:
                memo[(i,j)] = minDeleteSum(i+1,j+1)
            else:
                memo[(i,j)] = min(ord(s1[i]) + minDeleteSum(i+1,j), ord(s2[j]) + minDeleteSum(i,j+1))

            return memo[(i,j)]
        return minDeleteSum(0,0)
