# Definition for a binary tree node.
# class TreeNode:
#     def __init__(self, val=0, left=None, right=None):
#         self.val = val
#         self.left = left
#         self.right = right
class Solution:
    def delNodes(self, root: Optional[TreeNode], to_delete: List[int]) -> List[TreeNode]:
        delete_nodes = set(to_delete)
        res = []
        def postorder(curr):
            if not curr:
                return
            
            curr.left = postorder(curr.left)
            curr.right = postorder(curr.right)
            
            if curr.val in delete_nodes:
                if curr.left:
                    res.append(curr.left)
                if curr.right:
                    res.append(curr.right)
                return None

            return curr
        if postorder(root):
            res.append(root)
        return res
            
        
