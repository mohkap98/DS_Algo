# Definition for a binary tree node.
# class TreeNode:
#     def __init__(self, val=0, left=None, right=None):
#         self.val = val
#         self.left = left
#         self.right = right
class Solution:
    def buildTree(self, preorder: List[int], inorder: List[int]) -> Optional[TreeNode]:
        def DFS(preorder, inorder):
            if not inorder:
                return None
            root = TreeNode(preorder.pop())
            pivot = inorder.index(root.val)
            root.left = DFS(preorder, inorder[:pivot])
            root.right = DFS(preorder, inorder[pivot+1:])
            return root
        return DFS(preorder[::-1], inorder)
    
