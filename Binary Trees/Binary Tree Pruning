# Definition for a binary tree node.
# class TreeNode:
#     def __init__(self, val=0, left=None, right=None):
#         self.val = val
#         self.left = left
#         self.right = right
class Solution:
    def pruneTree(self, root: Optional[TreeNode]) -> Optional[TreeNode]:
        if not root:
            return root
        
        def postorder(curr):
            if not curr:
                return None
            
            curr.left = postorder(curr.left)
            curr.right = postorder(curr.right)

            if curr.left and curr.left.val == 0 and (not curr.left.left and not curr.left.right):
                curr.left = None
            
            if curr.right and curr.right.val == 0 and (not curr.right.left and not curr.right.right):
                curr.right = None
            
            return curr
        
        node = postorder(root)
        return None if node.val == 0 and (not node.left and not node.right) else node 
        
        
