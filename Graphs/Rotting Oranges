class Solution:
    def orangesRotting(self, grid: List[List[int]]) -> int:
        m,n = len(grid), len(grid[0])
        dq = deque()
        num_fresh = 0
        for i in range(m):
            for j in range(n):
                if grid[i][j] == 2: # ROTTEN 
                    dq.append([i,j])
                elif grid[i][j] == 1: # FRESH
                    num_fresh += 1    
                else: # NO
                    continue
        
        if not num_fresh:
            return num_fresh
        
        minutes = -1
        while dq:
            q_size = len(dq) 
            minutes += 1
            for _ in range(q_size):
                i,j = dq.popleft()
                for r,c in [[i,j+1], [i+1,j], [i,j-1], [i-1,j]]:
                    if 0 <= r < m and 0 <= c < n and grid[r][c] == 1:
                        grid[r][c] = 2
                        num_fresh -= 1
                        dq.append([r,c])
        
        if not num_fresh:
            return minutes
        return -1

