class Solution:
    def highestPeak(self, isWater: List[List[int]]) -> List[List[int]]:
        dq = deque()
        m,n = len(isWater), len(isWater[0])

        for i in range(m):
            for j in range(n):
                if isWater[i][j] == 1:
                    isWater[i][j] = 0
                    dq.append((i,j,0))
                else:
                    isWater[i][j] = inf

        while dq:
            i,j,dist = dq.popleft()
            for r,c in [(i,j+1),(i+1,j),(i,j-1),(i-1,j)]:
                if 0 <= r < m and 0 <= c < n:
                    if isWater[r][c] > dist + 1 and dist < isWater[r][c]:
                        isWater[r][c] = min(isWater[r][c], dist + 1)
                        dq.append((r,c,dist+1))
        
        return isWater
        
