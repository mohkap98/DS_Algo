class Solution:
    def islandPerimeter(self, grid: List[List[int]]) -> int:
        def DFS(r,c):
            if r < 0 or c < 0 or r >= m or c >= n or grid[r][c] == 0:
                return 1
            if grid[r][c] == "#":
                return 0
            grid[r][c] = "#"
            down = DFS(r+1, c)
            right = DFS(r, c+1)
            up = DFS(r-1, c)
            left = DFS(r, c-1)
            return down + right + up + left
        
        m,n = len(grid), len(grid[0])
        for i in range(m):
            for j in range(n):
                if grid[i][j]:
                    return DFS(i,j)
        
