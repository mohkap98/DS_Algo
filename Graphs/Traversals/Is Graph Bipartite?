class Solution:
    def isBipartite(self, graph: List[List[int]]) -> bool:
        color = {}
        def BFS(i):
            q = deque([i])
            color[i] = 1  
            while q:
                node = q.popleft()
                for nei in graph[node]:
                    if nei not in color:
                        color[nei] = -1 * color[node]
                        q.append(nei)
                    elif color[nei] == color[node]:
                        return False  
            return True

        # since there may be disconencted components 
        for i in range(len(graph)):
            if i not in color and not BFS(i):
                return False
        return True    
    
        
