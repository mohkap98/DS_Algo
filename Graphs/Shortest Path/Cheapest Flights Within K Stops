# Dijkstra Algo

class Solution:
    def findCheapestPrice(self, n: int, flights: List[List[int]], src: int, dst: int, k: int):
        adj = defaultdict(list)
        for u,v,price in flights:
            adj[u].append((v, price))
        
        min_price = inf
        heap = [[0,src,k+1]] # (price, src, k)
        
        while heap:
            price, cur_stop, stops = heapq.heappop(heap)
            if cur_stop == dst:
                return price
            if stops > 0:
                for nxt_stop, cost in adj[cur_stop]:
                    heapq.heappush(heap, [price + cost, nxt_stop, stops-1])
        
        return -1
