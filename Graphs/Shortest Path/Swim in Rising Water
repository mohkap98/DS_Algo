class Solution:
    def swimInWater(self, grid: List[List[int]]) -> int:
        n = len(grid)
        heap = [ (grid[0][0], 0, 0) ]
        seen = set((0,0))
        while heap:
            max_node,r,c = heapq.heappop(heap)
            if (r,c) == (n-1,n-1):
                return max_node
            for nr, nc in [(r+1,c),(r,c+1),(r-1,c),(r,c-1)]:
                if 0 <= nr < n and 0 <= nc < n and (nr, nc) not in seen:
                    seen.add((nr,nc))
                    heapq.heappush(heap, (max(max_node, grid[nr][nc]), nr, nc))
        return -1
        
        
