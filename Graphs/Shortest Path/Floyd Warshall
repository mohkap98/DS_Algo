def floydWarshall(edges, n):
    # get the dp matrix 
    dp = [[inf] * n for _ in range(n)]
    
    # self nodes = 0
    for i in range(n):
        dp[i][i] = 0  
    
    # direct connection 
    for i,j,wt in edges:
        dp[i][j] = wt
    
    # via connections 
    for via in range(n):
        for i in range(n):
            for j in range(n):
                if dp[via][j] + dp[i][via] < dp[i][j]:
                    dp[i][j] = dp[via][j] + dp[i][via]
    
    for row in range(n):
        print(dp[row])
