class Solution:
    def smallestStringWithSwaps(self, s: str, pairs: List[List[int]]) -> str:   
        def find(v):
            if parent[v] != v:
                parent[v] = find(parent[v]) 
            return parent[v]
        def union(a,b):
            pa = find(a)
            pb = find(b)

            if pa != pb:
                parent[pb] = pa
        
        n = len(s)
        parent = [i for i in range(n)]
        grp_map = defaultdict(list)
        
        for a, b in pairs:
            union(a,b)

        for i in range(n):
            grp_map[find(i)].append(s[i])
        
        for grp in grp_map.values():
            grp.sort(reverse=True) # reverse pop O(1)
        
        res = []
        for i in range(n):
            res.append(grp_map[find(i)].pop())
        
        return ''.join(res)
        

