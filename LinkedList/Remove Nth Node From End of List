# Definition for singly-linked list.
# class ListNode:
#     def __init__(self, val=0, next=None):
#         self.val = val
#         self.next = next
class Solution:
        def removeNthFromEnd(self, head: Optional[ListNode], n: int) -> Optional[ListNode]:
            # get the length 
            curr = head
            length = 0
            while curr:
                length += 1
                curr = curr.next    
            
            if n == length:
                return head.next

            # get till one node before target
            curr = head
            for _ in range(length - n-1):
                curr = curr.next
            
            curr.next = curr.next.next
            return head
