# Definition for singly-linked list.
# class ListNode:
#     def __init__(self, val=0, next=None):
#         self.val = val
#         self.next = next
class Solution:
    def mergeInBetween(self, list1: ListNode, a: int, b: int, list2: ListNode) -> ListNode:
        # iterate till a-1
        curr = list1
        for _ in range(a-1):
            curr = curr.next
        
        temp = curr.next
        curr.next = None
        
        # iterate for removing nodes
        for _ in range(b-a):
            temp = temp.next
        
        remaining_nodes = temp.next
        while list2:
            curr.next = list2
            curr = curr.next
            list2 = list2.next
        
        curr.next = remaining_nodes
        return list1
