# Definition for singly-linked list.
# class ListNode:
#     def __init__(self, val=0, next=None):
#         self.val = val
#         self.next = next
class Solution:
    def splitListToParts(self, head: Optional[ListNode], k: int) -> List[Optional[ListNode]]:
        res = []
        temp = []

        # Find the length of LL 
        length = 0
        curr = head 
        while curr:
            length += 1
            curr = curr.next
        
        bucketSize, extraNodes = length // k, length % k
        res = []
        curr = head

        for i in range(k):
            res.append(curr)
            for j in range(bucketSize - 1 + (1 if extraNodes else 0)):
                if curr:
                    curr = curr.next
            extraNodes -= (1 if extraNodes else 0)
            if curr:
                nxt = curr.next
                curr.next = None
                curr = nxt
        return res
                    





        
